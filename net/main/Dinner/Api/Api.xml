<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Api</name>
    </assembly>
    <members>
        <member name="T:Api.Controllers.BaseAuthController">
            <summary>
            带权限功能
            </summary>
        </member>
        <member name="M:Api.Controllers.BaseAuthController.GetUserCode">
            <summary>
            获取当前登录的用户Code
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.BaseAuthController.GetHostInfo">
            <summary>
            获取域名信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.CartController">
            <summary>
            购物车信息
            </summary>
        </member>
        <member name="M:Api.Controllers.CartController.#ctor(BLL.Interface.ICartService)">
            <summary>
            购物车
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:Api.Controllers.CartController.GetList">
            <summary>
            获取购物车商品
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.CartController.Update(Model.Request.CartUpdate)">
            <summary>
            修改购物车商品的数量
            </summary>
            <param name="data">商品信息</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.CartController.Delete(Model.Request.CartDelete)">
            <summary>
            删除购物车里的商品
            </summary>
            <param name="data">商品信息</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.CartController.Add(Model.Request.CartAdd)">
            <summary>
            添加商品到购物车
            </summary>
            <param name="data">商品信息</param>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.CategoryController">
            <summary>
            商品分类信息
            </summary>
        </member>
        <member name="M:Api.Controllers.CategoryController.#ctor(BLL.Interface.ICategoryService)">
            <summary>
            商品分类
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:Api.Controllers.CategoryController.GetList">
            <summary>
            获取商品分类信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.CategoryController.Update(Model.Request.CategoryUpdate)">
            <summary>
            修改商品分类信息
            </summary>
            <param name="data">商品分类信息</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.CategoryController.Delete(System.Int32)">
            <summary>
            删除商品分类
            </summary>
            <param name="id">商品分类id</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.CategoryController.Add(Model.Request.CategoryAdd)">
            <summary>
            添加商品分类
            </summary>
            <param name="data">商品分类信息</param>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.CompanyController">
            <summary>
            公司信息
            </summary>
        </member>
        <member name="M:Api.Controllers.CompanyController.Add(Model.Request.CompanyAdd)">
            <summary>
            添加公司
            </summary>
            <param name="company">公司信息</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.CompanyController.Update(Model.Request.CompanyUpdate)">
            <summary>
            更新公司信息
            </summary>
            <param name="data">公司信息</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.CompanyController.Delete(System.Int32)">
            <summary>
            删除公司信息
            </summary>
            <param name="companyid">公司id</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.CompanyController.GetEntity(System.Int32)">
            <summary>
            获取公司信息
            </summary>
            <param name="companyid">公司id</param>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.CouponController">
            <summary>
            优惠券信息
            </summary>
        </member>
        <member name="M:Api.Controllers.CouponController.Add(Model.Request.CouponAdd)">
            <summary>
            添加优惠券
            </summary>
            <param name="data">优惠券信息</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.CouponController.GrantToUser(System.Int32,System.String,System.Int32)">
            <summary>
            给用户分配优惠券
            </summary>
            <param name="couponid">优惠券id</param>
            <param name="openid">用户码</param>
            <param name="count">优惠券数量</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.CouponController.Delete(System.Int32)">
            <summary>
            删除优惠券信息
            </summary>
            <param name="couponid">优惠券id</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.CouponController.GetList">
            <summary>
            获取当前用户的优惠券信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.FeedBackController">
            <summary>
            用户反馈信息
            </summary>
        </member>
        <member name="M:Api.Controllers.FeedBackController.GetList">
            <summary>
            获取反馈信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.FeedBackController.Add(Model.Request.FeedbackAdd)">
            <summary>
            提交反馈信息
            </summary>
            <param name="data">反馈内容</param>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.HomeController">
            <summary>
            登录相关
            </summary>
        </member>
        <member name="M:Api.Controllers.HomeController.Login(Model.Request.UserAdd)">
            <summary>
            登录，若该用户未注册，则进行注册
            </summary>
            <param name="user">用户信息</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.HomeController.GetOpenId(System.String)">
            <summary>
            获取微信用户的openid
            </summary>
            <param name="loginCode">登录码</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.HomeController.ResetDatas">
            <summary>
            重置并生成初始数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.HomeController.GenerateToken(System.String)">
            <summary>
            生成token
            </summary>
            <param name="username">用户名</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.HomeController.CreateUserQrcode(System.String)">
            <summary>
            生成用户的二维码图片
            </summary>
            <param name="openid">openid</param>
        </member>
        <member name="M:Api.Controllers.HomeController.CreateUserInfo(Model.Database.TUser)">
            <summary>
            创建UserInfo实例，包含二维码图片地址
            </summary>
            <param name="user">TUser信息</param>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.NoticeController">
            <summary>
            公告信息
            </summary>
        </member>
        <member name="M:Api.Controllers.NoticeController.#ctor(BLL.Interface.INoticeService)">
            <summary>
            公告
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:Api.Controllers.NoticeController.GetList(System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>
            获取公告列表
            </summary>
            <param name="startDate">起始日期</param>
            <param name="endDate">结束日期</param>
            <param name="pageSize">每页数据条数</param>
            <param name="page">页码</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.NoticeController.Update(Model.Request.NoticeUpdate)">
            <summary>
            修改公告信息
            </summary>
            <param name="data">参数</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.NoticeController.Delete(System.Int32)">
            <summary>
            删除公告
            </summary>
            <param name="id">公告id</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.NoticeController.Add(Model.Request.NoticeAdd)">
            <summary>
            添加公告信息
            </summary>
            <param name="data">参数</param>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.OrderController">
            <summary>
            订单信息
            </summary>
        </member>
        <member name="M:Api.Controllers.OrderController.GetList(System.String,System.Int32,System.Int32)">
            <summary>
            获取订单列表
            </summary>
            <param name="productName">商品名称</param>
            <param name="pageSize">页数据量</param>
            <param name="page">页码</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.OrderController.GetEntity(System.String)">
            <summary>
            获取订单信息
            </summary>
            <param name="orderid">订单号</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.OrderController.Add(Model.Request.OrderAdd)">
            <summary>
            提交订单
            </summary>
            <param name="data">订单信息</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.OrderController.Cancel(System.String)">
            <summary>
            取消订单
            </summary>
            <param name="orderid">订单id</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.OrderController.Delete(System.String)">
            <summary>
            删除订单
            </summary>
            <param name="orderid">订单id</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.OrderController.AddComment(System.String,System.String)">
            <summary>
            添加订单评论
            </summary>
            <param name="orderid">订单id</param>
            <param name="comment">评论内容</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.OrderController.GetTodayOrder">
            <summary>
            用户获取自己现在需要取货的商品信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.OrderController.GetTodayOrderByUserCode(System.String)">
            <summary>
            获取目标用户现在需要取的餐品信息
            </summary>
            <param name="userCode">目标用户代码(openid)</param>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.PayController">
            <summary>
            支付相关功能
            </summary>
        </member>
        <member name="M:Api.Controllers.PayController.PreMiniPay(System.String)">
            <summary>
            生成微信预支付订单
            </summary>
            <param name="orderid">商户订单号</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.PayController.CloseMiniPay(System.String)">
            <summary>
            关闭微信支付订单
            </summary>
            <param name="orderid">商户订单号</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.PayController.QueryMiniPay(System.String)">
            <summary>
            查询微信支付订单
            </summary>
            <param name="transaction_id">微信订单号</param>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.PayNotifyController">
            <summary>
            微信支付回调功能
            </summary>
        </member>
        <member name="M:Api.Controllers.PayNotifyController.ReceiveWxPayNotyfy(Model.Response.Wx.WxPayNotify)">
            <summary>
            接收微信小程序支付回调数据
            </summary>
            <param name="notifyInfo">回调数据</param>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.ProductController">
            <summary>
            商品信息
            </summary>
        </member>
        <member name="M:Api.Controllers.ProductController.GetList(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取商品列表
            </summary>
            <param name="categoryid">商品分类id</param>
            <param name="pageSize">每页数据量</param>
            <param name="page">页码</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.ProductController.GetEntity(System.Int32)">
            <summary>
            获取商品详情
            </summary>
            <param name="productid">商品id</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.ProductController.Update(Model.Request.ProductUpdate)">
            <summary>
            修改商品信息
            </summary>
            <param name="data">参数</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.ProductController.Delete(System.Int32)">
            <summary>
            删除商品
            </summary>
            <param name="id">商品id</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.ProductController.Add(Model.Request.ProductAdd)">
            <summary>
            添加商品信息
            </summary>
            <param name="data">参数</param>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.UserController">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="M:Api.Controllers.UserController.Add(Model.Request.UserAdd)">
            <summary>
            添加用户
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UserController.Update(Model.Request.UserUpdate)">
            <summary>
            更新用户信息
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UserController.Delete(System.String)">
            <summary>
            删除用户
            </summary>
            <param name="openid">用户代码</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.UserController.GetEntity(System.String)">
            <summary>
            获取用户信息
            </summary>
            <param name="openid">用户代码</param>
            <returns></returns>
        </member>
        <member name="M:Api.ConfigurationManager.GetSection``1(System.String)">
            <summary>
            读取节点数据
            </summary>
            <typeparam name="T">节点数据模型</typeparam>
            <param name="key">节点名称</param>
            <returns></returns>
        </member>
        <member name="M:Api.ConfigurationManager.GetSection(System.String)">
            <summary>
            读取节点数据
            </summary>
            <param name="key">节点名称</param>
            <returns></returns>
        </member>
        <member name="M:Api.DataServiceExtention.AddDataServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册内部服务
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Api.JwtExtention">
            <summary>
            jwt服务相关
            </summary>
        </member>
        <member name="M:Api.JwtExtention.AddJwt(Microsoft.Extensions.DependencyInjection.IServiceCollection,Model.JwtSetting)">
            <summary>
            注册JWT服务
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Api.SwaggerExtention">
            <summary>
            swagger服务相关
            </summary>
        </member>
        <member name="M:Api.SwaggerExtention.AddSwaggerService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册Swagger服务
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Api.SwaggerExtention.UseSwaggerWare(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            引入Swagger中间件
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Api.Startup.SetJsonPara(EasyCaching.Serialization.Json.EasyCachingJsonSerializerOptions)">
            <summary>
            配置Cache序列化的JSON策略
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:Api.Startup.CreateStaticFolder(System.String)">
            <summary>
            创建文件，若目录不存在，先创建目录
            </summary>
            <param name="file"></param>
        </member>
    </members>
</doc>
