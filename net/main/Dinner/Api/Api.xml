<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Api</name>
    </assembly>
    <members>
        <member name="T:Api.Controllers.BaseAuthController">
            <summary>
            带权限功能
            </summary>
        </member>
        <member name="M:Api.Controllers.BaseAuthController.GetUserCode">
            <summary>
            获取当前登录的用户Code
            </summary>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.CompanyController">
            <summary>
            公司信息
            </summary>
        </member>
        <member name="M:Api.Controllers.CompanyController.Add(Model.Request.CompanyAdd)">
            <summary>
            添加公司
            </summary>
            <param name="company">公司基本信息</param>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.HomeController">
            <summary>
            登录相关
            </summary>
        </member>
        <member name="M:Api.Controllers.HomeController.Login(Model.Request.UserAdd)">
            <summary>
            登录，若该用户无未注册，则进行注册
            </summary>
            <param name="user">用户信息</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.HomeController.GetOpenId(System.String)">
            <summary>
            获取微信用户的openid
            </summary>
            <param name="loginCode">登录码</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.HomeController.GenerateToken(System.String)">
            <summary>
            生成token
            </summary>
            <param name="username">用户名</param>
            <returns></returns>
        </member>
        <member name="T:Api.Controllers.ProductController">
            <summary>
            商品信息
            </summary>
        </member>
        <member name="M:Api.Controllers.ProductController.GetList(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取商品列表
            </summary>
            <param name="categoryid">商品分类id</param>
            <param name="pageSize">每页数据量</param>
            <param name="page">页码</param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.ProductController.GetEntity(System.Int32)">
            <summary>
            获取商品详情
            </summary>
            <param name="productid">商品id</param>
            <returns></returns>
        </member>
        <member name="M:Api.ConfigurationManager.GetSection``1(System.String)">
            <summary>
            读取节点数据
            </summary>
            <typeparam name="T">节点数据模型</typeparam>
            <param name="key">节点名称</param>
            <returns></returns>
        </member>
        <member name="M:Api.ConfigurationManager.GetSection(System.String)">
            <summary>
            读取节点数据
            </summary>
            <param name="key">节点名称</param>
            <returns></returns>
        </member>
        <member name="M:Api.DataServiceExtention.AddDataServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册内部服务
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Api.JwtExtention">
            <summary>
            jwt服务相关
            </summary>
        </member>
        <member name="M:Api.JwtExtention.AddJwt(Microsoft.Extensions.DependencyInjection.IServiceCollection,Model.JwtSetting)">
            <summary>
            注册JWT服务
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Api.SwaggerExtention">
            <summary>
            swagger服务相关
            </summary>
        </member>
        <member name="M:Api.SwaggerExtention.AddSwaggerService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册Swagger服务
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Api.SwaggerExtention.UseSwaggerWare(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            引入Swagger中间件
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Api.Startup.SetJsonPara(EasyCaching.Serialization.Json.EasyCachingJsonSerializerOptions)">
            <summary>
            配置Cache序列化的JSON策略
            </summary>
            <param name="t"></param>
        </member>
    </members>
</doc>
