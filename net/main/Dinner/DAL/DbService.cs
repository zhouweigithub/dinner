// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Model.Database;

#nullable disable

namespace DAL
{
    public partial class DbService : DbContext
    {
        public DbService()
        {
        }

        public DbService(DbContextOptions<DbService> options)
            : base(options)
        {
        }

        public virtual DbSet<TCart> TCart { get; set; }
        public virtual DbSet<TCategory> TCategory { get; set; }
        public virtual DbSet<TComment> TComment { get; set; }
        public virtual DbSet<TCompany> TCompany { get; set; }
        public virtual DbSet<TCoupon> TCoupon { get; set; }
        public virtual DbSet<TFeedback> TFeedback { get; set; }
        public virtual DbSet<TMessage> TMessage { get; set; }
        public virtual DbSet<TOrder> TOrder { get; set; }
        public virtual DbSet<TOrderCallback> TOrderCallback { get; set; }
        public virtual DbSet<TOrderCoupon> TOrderCoupon { get; set; }
        public virtual DbSet<TOrderProduct> TOrderProduct { get; set; }
        public virtual DbSet<TPay> TPay { get; set; }
        public virtual DbSet<TProduct> TProduct { get; set; }
        public virtual DbSet<TUser> TUser { get; set; }
        public virtual DbSet<TUserCoupon> TUserCoupon { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasCharSet("utf8mb4")
                .UseCollation("utf8mb4_0900_ai_ci");

            modelBuilder.Entity<TCart>(entity =>
            {
                entity.ToTable("t_cart");

                entity.HasComment("购物车");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasComment("id");

                entity.Property(e => e.Count)
                    .HasColumnName("count")
                    .HasComment("商品数量");

                entity.Property(e => e.Crtime)
                    .HasColumnType("datetime")
                    .HasColumnName("crtime")
                    .HasComment("创建时间");

                entity.Property(e => e.Productid)
                    .HasColumnName("productid")
                    .HasComment("商品id");

                entity.Property(e => e.Userid)
                    .HasColumnName("userid")
                    .HasComment("用户id");
            });

            modelBuilder.Entity<TCategory>(entity =>
            {
                entity.ToTable("t_category");

                entity.HasComment("商品分类");

                entity.HasIndex(e => e.Name, "ix_name")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasComment("商品分类id");

                entity.Property(e => e.Crtime)
                    .HasColumnType("datetime")
                    .HasColumnName("crtime")
                    .HasComment("创建时间");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(32)
                    .HasColumnName("name")
                    .HasComment("商品分类名称");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasComment("状态0正常 1禁用");
            });

            modelBuilder.Entity<TComment>(entity =>
            {
                entity.ToTable("t_comment");

                entity.HasComment("评论");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasComment("id");

                entity.Property(e => e.Crtime)
                    .HasColumnType("datetime")
                    .HasColumnName("crtime")
                    .HasComment("创建时间");

                entity.Property(e => e.Msg)
                    .IsRequired()
                    .HasMaxLength(256)
                    .HasColumnName("msg")
                    .HasComment("内容");

                entity.Property(e => e.Orderid)
                    .IsRequired()
                    .HasMaxLength(32)
                    .HasColumnName("orderid")
                    .HasComment("订单编号");
            });

            modelBuilder.Entity<TCompany>(entity =>
            {
                entity.ToTable("t_company");

                entity.HasComment("公司");

                entity.HasIndex(e => e.Code, "IX_CODE")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "IX_NAME")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasComment("公司id");

                entity.Property(e => e.Address)
                    .HasMaxLength(128)
                    .HasColumnName("address")
                    .HasComment("公司地址");

                entity.Property(e => e.Code)
                    .HasMaxLength(64)
                    .HasColumnName("code")
                    .HasComment("唯一编码");

                entity.Property(e => e.Crtime)
                    .HasColumnType("datetime")
                    .HasColumnName("crtime")
                    .HasComment("创建时间");

                entity.Property(e => e.Name)
                    .HasMaxLength(64)
                    .HasColumnName("name")
                    .HasComment("公司名字");
            });

            modelBuilder.Entity<TCoupon>(entity =>
            {
                entity.ToTable("t_coupon");

                entity.HasComment("优惠卷信息");

                entity.HasIndex(e => e.Name, "ix_name")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasComment("优惠券id");

                entity.Property(e => e.Crtime)
                    .HasColumnType("timestamp")
                    .HasColumnName("crtime")
                    .HasDefaultValueSql("CURRENT_TIMESTAMP")
                    .HasComment("优惠卷创建时间");

                entity.Property(e => e.EndTime)
                    .HasColumnType("datetime")
                    .HasColumnName("end_time")
                    .HasComment("使用截止日期");

                entity.Property(e => e.Money)
                    .HasPrecision(16, 2)
                    .HasColumnName("money")
                    .HasComment("优惠金额");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("name")
                    .HasComment("优惠卷名称");

                entity.Property(e => e.StartTime)
                    .HasColumnType("datetime")
                    .HasColumnName("start_time")
                    .HasComment("使用开始日期");
            });

            modelBuilder.Entity<TFeedback>(entity =>
            {
                entity.ToTable("t_feedback");

                entity.HasComment("用户反馈");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasComment("id");

                entity.Property(e => e.Crtime)
                    .HasColumnType("datetime")
                    .HasColumnName("crtime")
                    .HasComment("创建时间");

                entity.Property(e => e.Msg)
                    .IsRequired()
                    .HasMaxLength(332)
                    .HasColumnName("msg")
                    .HasComment("内容");

                entity.Property(e => e.Userid)
                    .HasColumnName("userid")
                    .HasComment("用户id");
            });

            modelBuilder.Entity<TMessage>(entity =>
            {
                entity.ToTable("t_message");

                entity.HasComment("消息中心");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasComment("id");

                entity.Property(e => e.Crtime)
                    .HasColumnType("datetime")
                    .HasColumnName("crtime")
                    .HasComment("创建时间");

                entity.Property(e => e.Isread)
                    .HasColumnName("isread")
                    .HasComment("是否已读(0未读 1已读)");

                entity.Property(e => e.Message)
                    .IsRequired()
                    .HasMaxLength(640)
                    .HasColumnName("message")
                    .HasComment("消息内容");

                entity.Property(e => e.Userid)
                    .HasColumnName("userid")
                    .HasComment("用户id");
            });

            modelBuilder.Entity<TOrder>(entity =>
            {
                entity.ToTable("t_order");

                entity.HasComment("订单信息");

                entity.Property(e => e.Id)
                    .HasMaxLength(32)
                    .HasColumnName("id")
                    .HasComment("订单编号");

                entity.Property(e => e.CouponMoney)
                    .HasPrecision(32, 2)
                    .HasColumnName("coupon_money")
                    .HasComment("优惠金额");

                entity.Property(e => e.Crtime)
                    .HasColumnType("datetime")
                    .HasColumnName("crtime")
                    .HasComment("创建时间");

                entity.Property(e => e.Money)
                    .HasPrecision(32, 2)
                    .HasColumnName("money")
                    .HasComment("订单金额");

                entity.Property(e => e.PayMoney)
                    .HasPrecision(32, 2)
                    .HasColumnName("pay_money")
                    .HasComment("实际支付金额");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasComment("状态");

                entity.Property(e => e.Userid)
                    .HasColumnName("userid")
                    .HasComment("用户id");
            });

            modelBuilder.Entity<TOrderCallback>(entity =>
            {
                entity.HasKey(e => e.Orderid)
                    .HasName("PRIMARY");

                entity.ToTable("t_order_callback");

                entity.HasComment("微信支付回调");

                entity.Property(e => e.Orderid)
                    .HasMaxLength(32)
                    .HasColumnName("orderid")
                    .HasComment("订单编号");

                entity.Property(e => e.Crtime)
                    .HasColumnType("datetime")
                    .HasColumnName("crtime")
                    .HasComment("创建时间");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasComment("状态");

                entity.Property(e => e.WxOrderid)
                    .HasMaxLength(32)
                    .HasColumnName("wx_orderid")
                    .HasComment("微信支付订单号");
            });

            modelBuilder.Entity<TOrderCoupon>(entity =>
            {
                entity.HasKey(e => new { e.Orderid, e.Couponid })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("t_order_coupon");

                entity.HasComment("订单中使用的优惠卷");

                entity.Property(e => e.Orderid)
                    .HasMaxLength(32)
                    .HasColumnName("orderid")
                    .HasComment("订单编号");

                entity.Property(e => e.Couponid)
                    .HasColumnName("couponid")
                    .HasComment("优惠卷id");

                entity.Property(e => e.Count)
                    .HasColumnName("count")
                    .HasComment("数量");

                entity.Property(e => e.Money)
                    .HasPrecision(16, 2)
                    .HasColumnName("money")
                    .HasComment("总金额");
            });

            modelBuilder.Entity<TOrderProduct>(entity =>
            {
                entity.HasKey(e => new { e.Orderid, e.Productid })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("t_order_product");

                entity.HasComment("订单中的商品信息");

                entity.Property(e => e.Orderid)
                    .HasMaxLength(32)
                    .HasColumnName("orderid")
                    .HasComment("订单编号");

                entity.Property(e => e.Productid)
                    .HasColumnName("productid")
                    .HasComment("商品id");

                entity.Property(e => e.Count)
                    .HasColumnName("count")
                    .HasComment("数量");

                entity.Property(e => e.Crtime)
                    .HasColumnType("datetime")
                    .HasColumnName("crtime")
                    .HasComment("创建时间");

                entity.Property(e => e.Money)
                    .HasPrecision(16, 2)
                    .HasColumnName("money")
                    .HasComment("金额");

                entity.Property(e => e.Price)
                    .HasPrecision(16, 2)
                    .HasColumnName("price")
                    .HasComment("单价");
            });

            modelBuilder.Entity<TPay>(entity =>
            {
                entity.ToTable("t_pay");

                entity.HasComment("支付信息");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasComment("id");

                entity.Property(e => e.Crtime)
                    .HasColumnType("datetime")
                    .HasColumnName("crtime")
                    .HasComment("创建时间");

                entity.Property(e => e.Orderid)
                    .IsRequired()
                    .HasMaxLength(32)
                    .HasColumnName("orderid")
                    .HasComment("订单编号");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasComment("状态");

                entity.Property(e => e.WxOrderid)
                    .IsRequired()
                    .HasMaxLength(64)
                    .HasColumnName("wx_orderid")
                    .HasComment("微信订单号");
            });

            modelBuilder.Entity<TProduct>(entity =>
            {
                entity.ToTable("t_product");

                entity.HasComment("商品");

                entity.HasIndex(e => e.Category, "category");

                entity.HasIndex(e => e.Name, "ix_name")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasComment("商品id");

                entity.Property(e => e.Category)
                    .HasColumnName("category")
                    .HasComment("商品分类");

                entity.Property(e => e.Crtime)
                    .HasColumnType("datetime")
                    .HasColumnName("crtime")
                    .HasComment("创建时间");

                entity.Property(e => e.Img)
                    .HasMaxLength(256)
                    .HasColumnName("img")
                    .HasComment("商品图片");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnName("name")
                    .HasComment("商品名称");

                entity.Property(e => e.Price)
                    .HasPrecision(16, 2)
                    .HasColumnName("price")
                    .HasComment("价格");

                entity.Property(e => e.Sales)
                    .HasColumnName("sales")
                    .HasComment("销量");

                entity.HasOne(d => d.CategoryNavigation)
                    .WithMany(p => p.TProduct)
                    .HasForeignKey(d => d.Category)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("t_product_ibfk_1");
            });

            modelBuilder.Entity<TUser>(entity =>
            {
                entity.ToTable("t_user");

                entity.HasComment("用户");

                entity.HasIndex(e => e.Companyid, "fk_company_idx");

                entity.HasIndex(e => e.Code, "ix_code")
                    .IsUnique();

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasComment("用户id");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(64)
                    .HasColumnName("code")
                    .HasComment("唯一编码");

                entity.Property(e => e.Companyid)
                    .HasColumnName("companyid")
                    .HasComment("公司id");

                entity.Property(e => e.Crtime)
                    .HasColumnType("datetime")
                    .HasColumnName("crtime")
                    .HasComment("创建时间");

                entity.Property(e => e.Headimg)
                    .IsRequired()
                    .HasMaxLength(256)
                    .HasColumnName("headimg")
                    .HasComment("头像图片");

                entity.Property(e => e.Nick)
                    .IsRequired()
                    .HasMaxLength(32)
                    .HasColumnName("nick")
                    .HasComment("昵称");

                entity.Property(e => e.Phone)
                    .IsRequired()
                    .HasMaxLength(32)
                    .HasColumnName("phone")
                    .HasComment("手机号");

                entity.HasOne(d => d.Company)
                    .WithMany(p => p.TUser)
                    .HasForeignKey(d => d.Companyid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_company");
            });

            modelBuilder.Entity<TUserCoupon>(entity =>
            {
                entity.HasKey(e => new { e.Userid, e.Couponid })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.ToTable("t_user_coupon");

                entity.HasComment("用户的优惠卷");

                entity.HasIndex(e => e.Couponid, "fk_coupon_idx");

                entity.Property(e => e.Userid)
                    .HasColumnName("userid")
                    .HasComment("用户id");

                entity.Property(e => e.Couponid)
                    .HasColumnName("couponid")
                    .HasComment("优惠卷id");

                entity.Property(e => e.Count)
                    .HasColumnName("count")
                    .HasComment("数量");

                entity.Property(e => e.Crtime)
                    .HasColumnType("datetime")
                    .HasColumnName("crtime")
                    .HasComment("创建时间");

                entity.HasOne(d => d.Coupon)
                    .WithMany(p => p.TUserCoupon)
                    .HasForeignKey(d => d.Couponid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_coupon");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.TUserCoupon)
                    .HasForeignKey(d => d.Userid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_user");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}